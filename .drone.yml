workspace:
  base: /readr-media
  path: readr-site
pipeline:
    # Send build start message to slack when pull_request and push
    # -------------------------------------- Test Sequence: Github Pull Request -------------------------------
  pull-request-start-notify:
    image: gcr.io/mirrormedia-1470651750304/drone-slack:1.0.1
    pull: true
    username: drone
    link_names: true
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    recipient: ${DRONE_COMMIT_AUTHOR}
    secrets: [slack_webhook]
    usermaps:
      FalseChord: yychen
      hcchien: hcchien
      hsuehyungtan: noah.tan
      kwhsiung: kwhsiung
      yeefun: Yeefun
      ichiaohsu: mmich
    when:
      event: pull_request
      branch:
        exclude:
        - master
    template: >
      Build for your pull <https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}|requsest:*{{build.pull}}*> to {{repo.name}}:*{{build.branch}} has started.
    
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./.yarn-cache
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: pull_request
      branch: 
        exclude:
        - master
  
  get-default-test-config:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
    - gcloud source repos clone configs ./configs
    - cp configs/readr-media/${DRONE_REPO_NAME}/dev/config.js ./api/
    - cp configs/gcskeyfile.json ./gcskeyfile.json
    - "cp configs/readr-media/${DRONE_REPO_NAME}/${DRONE_BRANCH}/config.js ./api/config.js>/dev/null || :"
    - rm -rf configs 
    when:
      event: pull_request
      branch: 
        exclude:
        - master

  builds:
    image: node:10.15-slim
    commands:
    - apt-get update && apt-get install -y node-gyp
    - yarn install
    - yarn run build
    when:
      event: [pull_request]
      branch: 
        exclude: [master]

  publish:
    image: plugins/gcr
    repo: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}
    tag:
    - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    environment:
      - DOCKER_LAUNCH_DEBUG=true
    secrets: [google_credentials]
    dockerfile: docker/Dockerfile
    when:
      event: pull_request
      branch: 
        exclude: 
        - master

  download-charts:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
      - gcloud source repos clone helm ../helm
      - mkdir ./helm
      - cp -rf ../helm/readr-site ./helm/
      - rm -rf ../helm
    when:
      event: pull_request
      branch:
        exclude:
        - master

  helm-deploy-review:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm/readr-site
    release: ${DRONE_REPO_NAME}-${DRONE_BRANCH}
    wait: true
    # debug: true
    upgrade: true
    reuse_values: true
    recreate_pods: false
    client_only: true
    service_account: tiller
    secrets: [api_server, kubernetes_token]
    values: image.tag=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7},fullnameOverride=${DRONE_REPO_NAME}-${DRONE_BRANCH},service.type=LoadBalancer
    namespace: review
    when:
      event: pull_request
      branch:
        exclude:
        - master

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./.yarn-cache
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      branch: 
        exclude:
        - master

  check-service-address:
    image: gcr.io/mirrormedia-1470651750304/drone-gke-cli:1.0.1
    cluster: dev
    zone: asia-east1-a
    namespace: review
    secrets: [google_credentials]
    pull: true
    when:
      event: pull_request
      branch:
        exclude:
        - master

  pull-request-finish:
    image: gcr.io/mirrormedia-1470651750304/drone-slack:1.0.1
    pull: true
    pr_message: true
    secrets: [slack_webhook]
    username: drone
    link_names: true
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    recipient: 
    - ${DRONE_COMMIT_AUTHOR}
    # - Tin
    usermaps:
      FalseChord: yychen
      hcchien: hcchien
      hsuehyungtan: noah.tan
      kwhsiung: kwhsiung
      yeefun: Yeefun
      ichiaohsu: mmich
    when:
      event: pull_request
      branch:
        exclude:
        - master
    template: >
      {{#success build.status}}
        Your server {{build.serviceAddr}} from commit *${DRONE_COMMIT_SHA:0:7}* in {{repo.name}}:{{build.branch}} was served.
      {{else}}
        Houston, we have a problem. Build <${DRONE_BUILD_LINK}|#{{build.number}}> failed. Fix me please.
      {{/success}}
  # -------------------------------------- Release Candidate Sequence: Github Push --------------------------
  push-start:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    template: >
      *start* building *{{repo.name}}* <${DRONE_BUILD_LINK}|#{{build.number}}>.
      Someone gave *{{build.branch}}* a little push.
    when:
      event: [push]
  
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./.yarn-cache
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: [push]
      branch: [dev, stage, 2.0]
  
  get_dev_config:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
    - gcloud source repos clone default ../default
    - cp ../default/readr-site/dev/config.js ./api/
    - cp ../default/keystone/gcskeyfile.json ./gcskeyfile.json
    when:
      event: [push]
      branch: [dev, 2.0]
  
  get_stage_config:
    image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
    secrets: [google_credentials]
    commands:
    - gcloud source repos clone default ../default
    - cp ../default/readr-site/stage/config.js ./api/
    - cp ../default/readr-site/stage/.kube.yml ./.kube.yml
    - cp ../default/keystone/gcskeyfile.json ./gcskeyfile.json
    when:
      event: [push]
      branch: stage

  builds:
    image: node:10.15-slim
    commands:
    - apt-get update && apt-get install -y node-gyp
    - yarn install
    - yarn run build
    when:
      event: [push]
      branch: [dev, stage, 2.0]
  
  publish:
    image: plugins/gcr
    repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
    tag: ${DRONE_COMMIT_AUTHOR}_${DRONE_COMMIT_BRANCH}_${DRONE_BUILD_NUMBER}
    environment:
      - DOCKER_LAUNCH_DEBUG=true
    secrets: [google_credentials]
    when:
      event: [push]
      branch: [dev, stage, 2.0]
  
  deploy_dev:
    image: nytimes/drone-gke:develop
    zone: asia-east1-a
    cluster: dev
    namespace: default
    # For debugging
    dry_run: false
    verbose: true
    secrets:
      - source: google_credentials
        target: token
    vars:
      image: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}:${DRONE_COMMIT_AUTHOR}_${DRONE_COMMIT_BRANCH}_${DRONE_BUILD_NUMBER}
      app: ${DRONE_REPO_NAME}
      tier: frontend
    when:
      event: [push]
      branch: [dev, 2.0]

  deploy_stage:
    image: nytimes/drone-gke:develop
    zone: asia-east1-a
    cluster: prod-readr
    namespace: default
    # For debugging
    dry_run: false
    verbose: true
    secrets:
      - source: google_credentials
        target: token
    vars:
      image: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}:${DRONE_COMMIT_AUTHOR}_${DRONE_COMMIT_BRANCH}_${DRONE_BUILD_NUMBER}
      app: ${DRONE_REPO_NAME}
      tier: frontend-stage
      branch: stage
    when:
      event: [push]
      branch: stage

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./.yarn-cache
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      branch: [dev, stage, 2.0]
  
  finish_slack:
    image: plugins/slack
    channel: jenkins
    secrets: [slack_webhook]
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    when:
      status: [success, failure]
      event: [push]
    template: >
      {{#success build.status}}
        *success* ${DRONE_REPO_NAME}:${DRONE_COMMIT_AUTHOR}_${DRONE_COMMIT_BRANCH}_${DRONE_BUILD_NUMBER} was well served.
        Check out our new <http://dev.readr.tw|readr>.
      {{else}}
        Houston, we have a problem. Build <${DRONE_BUILD_LINK}|#{{build.number}}> failed.
      {{/success}}
